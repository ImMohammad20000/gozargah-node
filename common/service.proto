syntax = "proto3";

package service;

option go_package = "marzban_node_go/common";

message Empty {}

// Base info response message
message BaseInfoResponse {
  bool started = 1;
  string core_version = 2;
  string node_version = 3;
  string session_id = 4;
  string extra = 5;
}

enum BackendType {
  XRAY = 0;
}

message Backend {
  BackendType type = 1;
  string config = 2;
}

// log
message Log {
    string detail = 1;
}

// stats
message Stat {
  string name = 1;
  string type = 2;
  string link = 3;
  int64 value = 4;
}

message StatResponse {
  repeated Stat stats = 1;
}

message OnlineStatRequest {
  string email = 1;
}

message OnlineStatResponse {
  string email = 1;
  int64 value = 2;
}

message BackendStatsResponse {
    uint32 num_goroutine = 1;
    uint32 num_gc = 2;
    uint64 alloc = 3;
    uint64 total_alloc = 4;
    uint64 sys = 5;
    uint64 mallocs = 6;
    uint64 frees = 7;
    uint64 live_objects = 8;
    uint64 pause_total_ns = 9;
    uint32 uptime = 10;
}

message SystemStatsResponse {
    uint64 mem_total = 1;
    uint64 mem_used = 2;
    uint64 cpu_cores = 3;
    double cpu_usage = 4;
    uint64 incoming_bandwidth_speed = 5;
    uint64 outgoing_bandwidth_speed = 6;
}

// User
message VmessSetting {
    string id = 1;
}

message VlessSetting {
    string id = 1;
    string flow = 2;
}

message TrojanSetting {
    string password = 1;
}

message ShadowsocksSetting {
    string password = 1;
    string method = 2;
}

message Proxy {
    VmessSetting vmess = 1;
    VlessSetting vless = 2;
    TrojanSetting trojan = 3;
    ShadowsocksSetting shadowsocks = 4;
}

message User {
    string email = 1;
    Proxy proxies = 2;
    repeated string inbounds = 3;
}

// Service for node management and connection
service NodeService {
  rpc Start (Backend) returns (BaseInfoResponse) {}
  rpc Stop (Empty) returns (Empty) {}
  rpc GetBaseInfo (Empty) returns (BaseInfoResponse) {}

  rpc GetLogs (Empty) returns (stream Log) {}

  rpc GetNodeStats (Empty) returns (SystemStatsResponse) {}
  rpc GetBackendStats (Empty) returns (BackendStatsResponse) {}
  rpc GetOutboundsStats (Empty) returns (StatResponse) {}
  rpc GetInboundsStats (Empty) returns (StatResponse) {}
  rpc GetUsersStats (Empty) returns (StatResponse) {}
  rpc GetUserOnlineStat (OnlineStatRequest) returns (OnlineStatResponse) {}

  rpc AddUser (User) returns (Empty) {}
  rpc UpdateUser (User) returns (Empty) {}
  rpc RemoveUser (User) returns (Empty) {}
}
